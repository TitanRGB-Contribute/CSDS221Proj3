{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-043ff5bd\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Latest Posts\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"create-post\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"create-post\"\n}, \"Post Content: \", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_7 = {\n  class: \"post-container\"\n};\nconst _hoisted_8 = [\"item\", \"index\"];\nconst _hoisted_9 = {\n  class: \"text\"\n};\nconst _hoisted_10 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"create-post\",\n    onSubmit: _cache[0] || (_cache[0] = (...args) => $options.createPost && $options.createPost(...args)),\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.text = $event),\n    placeholder: \"What's new?\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.text]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.createPost && $options.createPost(...args))\n  }, \"POST!\")]), _hoisted_5, $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, (post, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"post\",\n      item: post,\n      index: index,\n      key: post._id\n    }, [_createTextVNode(_toDisplayString(`${post.createdAt.getDate()}/${post.createdAt.getMonth()}/${post.createdAt.getFullYear()}`) + \" \", 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_9, _toDisplayString(post.text), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deletePost(post._id)\n    }, \"x\", 8 /* PROPS */, _hoisted_10)], 8 /* PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","type","id","onSubmit","_cache","args","$options","createPost","$data","text","$event","placeholder","onClick","_hoisted_5","error","_hoisted_6","_toDisplayString","_hoisted_7","_Fragment","_renderList","posts","post","index","item","key","_id","createdAt","getDate","getMonth","getFullYear","_hoisted_9","deletePost","_hoisted_10"],"sources":["E:\\Projects\\Web Development\\CSDS221Proj3\\client\\src\\components\\PostComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Latest Posts</h1>\n    <div class=\"create-post\">\n      <label for=\"create-post\">Post Content: </label>\n      <input type=\"text\" id=\"create-post\" v-on:submit=\"createPost\" v-model=\"text\" placeholder=\"What's new?\">\n      <button v-on:click=\"createPost\">POST!</button>\n    </div>\n    <hr>\n    <p class=\"error\" v-if=\"error\">{{ error }}</p>\n    <div class=\"post-container\">\n      <div class=\"post\"\n        v-for=\"(post, index) in posts\"\n        v-bind:item=\"post\"\n        v-bind:index=\"index\"\n        v-bind:key=\"post._id\"\n      >\n        {{ `${post.createdAt.getDate()}/${post.createdAt.getMonth()}/${post.createdAt.getFullYear()}` }}\n        <p class=\"text\">{{ post.text }}</p>\n        <button v-on:click=\"deletePost(post._id)\">x</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostService from \"../PostService\";\n\nexport default {\n  name: \"PostComponent\",\n  data() {\n    return {\n      posts: [],\n      error: '',\n      text: '',\n    };\n  },\n  async created() {\n    try {\n      this.posts = await PostService.getPosts();\n    } catch (err) {\n      this.error = err.message;\n    }\n  },\n  methods: {\n    async createPost() {\n      if (this.text !== \"\"){\n        await PostService.insertPost(this.text);\n        this.text = \"\";\n      }\n      this.posts = await PostService.getPosts();\n    },\n    async deletePost(id) {\n      await PostService.deletePost(id);\n      this.posts = await PostService.getPosts();\n    }\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1 {\n  color: #42B883;\n}\n\ndiv.container {\n  max-width: 800px;\n  margin: auto;\n  \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\ninput {\n  height: 1.5rem;\n  padding-left: 1rem;\n  color: #42B883;\n  background: #1A1A20;\n  border-top: 0;\n  border-bottom: 1px solid #42B883;\n  border-left: 0;\n  border-right: 0;\n  border-radius: 0;\n}\n\ninput:focus {\n  border-radius: 0.5rem;\n  outline: 1px solid #42B883;\n}\n\nbutton {\n  height: 1.8rem;\n  color: #42B883;\n  background: #1A1A20;\n  border: 2px solid #42B883;\n  border-radius: 0.1rem;\n  margin-left: 0.2rem;\n}\n\nbutton:active {\n  height: 1.8rem;\n  color: #1A1A20;\n  background: #42B883;\n  border: 2px solid #42B883;\n  border-radius: 0.1rem;\n}\n\nhr {\n  position: relative;\n  width: 300%;\n  left: -100%;\n  margin-top: 2rem;\n  border: 1px solid #42B883;\n}\n\np.error {\n  border: 1px solid #ff5b5f;\n  background-color: #ffc5c1;\n  padding:  10px;\n  margin-bottom: 15px;\n}\n\ndiv.create-post {\n  color: #42B883;\n  position: relative;\n  width: 100%;\n}\n\ndiv.post-container {\n  width: 100%;\n  color: #42B883;\n}\n\ndiv.post {\n  margin-top: 2rem;\n}\n\ndiv.post button {\n  position: relative;\n  height: 1.5rem;\n  top: 0;\n  right: 0;\n}\n\ndiv.created-at {\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 5px 15px 5px 15px;\n  background-color: darkgreen;\n  color: white;\n  font-size: 13px;\n}\n\np.text {\n  font-size: 22px;\n  font-weight: 700;\n  margin-bottom: 0;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAAqB,YAAjB,cAAY;;EACXD,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAA+C;EAAxCC,GAAG,EAAC;AAAa,GAAC,gBAAc;gEAIzCD,mBAAA,CAAI;;;EACDD,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAgB;;;EAQpBA,KAAK,EAAC;AAAM;;;uBAjBrBG,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,UAAqB,EACrBJ,mBAAA,CAIM,OAJNK,UAIM,GAHJC,UAA+C,E,gBAC/CN,mBAAA,CAAsG;IAA/FO,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,aAAa;IAAMC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;+DAAWG,KAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEC,WAAW,EAAC;iEAAlBH,KAAA,CAAAC,IAAI,E,GAC1Ef,mBAAA,CAA8C;IAAjCkB,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,OAAK,E,GAEvCQ,UAAI,EACmBL,KAAA,CAAAM,KAAK,I,cAA5BlB,mBAAA,CAA6C,KAA7CmB,UAA6C,EAAAC,gBAAA,CAAZR,KAAA,CAAAM,KAAK,oB,mCACtCpB,mBAAA,CAWM,OAXNuB,UAWM,I,kBAVJrB,mBAAA,CASMsB,SAAA,QAAAC,WAAA,CARoBX,KAAA,CAAAY,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBADrB1B,mBAAA,CASM;MATDH,KAAK,EAAC,MAAM;MAER8B,IAAI,EAAEF,IAAI;MACVC,KAAK,EAAEA,KAAK;MACZE,GAAG,EAAEH,IAAI,CAACI;6CAEXJ,IAAI,CAACK,SAAS,CAACC,OAAO,MAAMN,IAAI,CAACK,SAAS,CAACE,QAAQ,MAAMP,IAAI,CAACK,SAAS,CAACG,WAAW,QAAO,GAChG,iBAAAnC,mBAAA,CAAmC,KAAnCoC,UAAmC,EAAAd,gBAAA,CAAhBK,IAAI,CAACZ,IAAI,kBAC5Bf,mBAAA,CAAoD;MAAvCkB,OAAK,EAAAF,MAAA,IAAEJ,QAAA,CAAAyB,UAAU,CAACV,IAAI,CAACI,GAAG;OAAG,GAAC,iBAAAO,WAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}